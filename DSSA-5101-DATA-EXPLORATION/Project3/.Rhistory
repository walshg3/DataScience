## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
#ggplot(honeybee, aes(x=honeybee$state)) + geom_histogram(aes(y=..totalprod..))
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=year_factor, y=honeybee$numcol)) + geom_bar()
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=honeybee$state)) + geom_histogram(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=honeybee$state)) + geom_histogram(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=state_factor, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=year_factor, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(y=honeybee$year, stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(x=honeybee$year, stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year), stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year), stat = "identity", position = stack())
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year, position = stack()), stat = "identity", )
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year), stat = "identity", position = (stack))
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year), stat = "identity", position = "stack")
# Create a basic plot of Yield per Colony against All Neonics
# Create a basic histogram of the number of honey producing colonies
# Create a plot using ggplot() or qplot() of Yield per Colony against All Neonics
# Create a histogram using ggplot() or qplot() of the number of honey producing colonies
# Convert year, state, and Region into Factors
# Create a histogram using ggplot() of Total production of honey by State
# Create a bar graph using ggplot() of the Number of colonies by Year
# Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
# Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
# Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
setwd("/Users/gregwalsh/Github/DataScience /DSSA-5101-DATA-EXPLORATION/Project3")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year), stat = "identity", position = "fill")
stack
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol)) +geom_bar(aes(fill=year), stat = "identity", position = "stack")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol, fill=year)) + geom_bar(stat = "identity", position = "stack")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$numcol, fill=state_factor)) + geom_bar(stat = "identity", position = "stack")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol, fill(state_factor))) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol, fill(state_factor))) + geom_line(stat = "identity")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol) + geom_line(stat = "identity")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol) + geom_line())
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol)) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol)) + geom_line(color=state_factor)
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol)) + geom_line(colors=state_factor)
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol)) + geom_line(color=state_factor)
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol)) + geom_line()
# Create a basic plot of Yield per Colony against All Neonics
# Create a basic histogram of the number of honey producing colonies
# Create a plot using ggplot() or qplot() of Yield per Colony against All Neonics
# Create a histogram using ggplot() or qplot() of the number of honey producing colonies
# Convert year, state, and Region into Factors
# Create a histogram using ggplot() of Total production of honey by State
# Create a bar graph using ggplot() of the Number of colonies by Year
# Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
# Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
# Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
setwd("/Users/gregwalsh/Github/DataScience /DSSA-5101-DATA-EXPLORATION/Project3")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol, fill(state_factor))) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol)) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol)) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol) group=state_factor) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=year_factor,y=honeybee$numcol), group=state_factor) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol), group=state_factor) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol), group=honeybee$state) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee,aes(x=honeybee$year,y=honeybee$numcol, group=honeybee$state)) + geom_line()
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(linetype=state_factor))
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state has the most bees per year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_bar(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state has the most bees per year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_bar(aes(color=state_factor, stat = "identity"))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state has the most bees per year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_bar(aes(color=state_factor, stat = "identity"))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state has the most bees per year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor, bins=10))
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor, bind_cols(10)))
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_boxplot(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_bar(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_violin(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select count(*) from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select count(*) from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP 10 priceperlb from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP 10 * priceperlb from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP 10 *  from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from honeybee.priceperlb;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from HONEYBEES.CSV.priceperlb;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from HONEYBEES.priceperlb;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from honeybee.priceperlb;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from honeybee.priceperlb;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select * from honeybee.state;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select top 10 priceperlb, state from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP 10 priceperlb, state from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP  priceperlb, state from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP 50 PERCENT priceperlb, state from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select TOP 50 PERCENT from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select  priceperlb, state from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state from honeybee LIMIT 10;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select MAX(priceperlb, state) from honeybee LIMIT 10;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select MAX(priceperlb) from honeybee LIMIT 10;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select MAX(priceperlb) from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select MAX(priceperlb,state) from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select MAX(priceperlb, state) from honeybee;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state, most from honeybee WHERE most = (SELECT MAX(priceperlb) FROM honeybees);")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state, most from honeybee WHERE most = (SELECT MAX(priceperlb) FROM honeybee);")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state, most from honeybee WHERE most = (SELECT MAX(most) FROM honeybee);")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state, from honeybee WHERE priceperlb = (SELECT MAX(priceperlb) FROM honeybee);")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("select priceperlb, state, FROM honeybee WHERE priceperlb = (SELECT MAX(priceperlb) FROM honeybee);")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT priceperlb, state, FROM honeybee WHERE priceperlb = (SELECT MAX(priceperlb) FROM honeybee);")
library(sqldf)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT priceperlb, state FROM honeybee WHERE priceperlb = (SELECT MAX(priceperlb) FROM honeybee);")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT priceperlb, state FROM honeybee WHERE priceperlb = (SELECT MAX(priceperlb) FROM honeybee) LIMIT 10;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT priceperlb, state FROM honeybee WHERE priceperlb = (SELECT MAX(priceperlb) FROM honeybee LIMIT 10) ;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT state, MAX(priceperlb) FROM honeybee GROUPBY year;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT state, MAX(priceperlb) FROM honeybee GROUP BY year;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
x <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
ggplot(x, aes(x=tester$year, y=tester$priceperlb, group=tester$state)) +geom_line()
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
ggplot(x, aes(x=honeybee$year, y=honeybee$priceperlb, group=tester$state)) +geom_line()
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
ggplot(x, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) +geom_line()
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
ggplot(x, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line()
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_line(aes(color=state_factor))
ggplot(tester, aes(x=tester$year, y=tester$priceperlb, group=tester$state)) +geom_line()
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$state)) + geom_boxplot(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$priceperlb, group=honeybee$year)) + geom_boxplot(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$priceperlb, group=honeybee$year)) + geom_boxplot(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$priceperlb, group=honeybee$year)) + geom_dotplot(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$priceperlb, group=honeybee$year)) + geom_dotplot(aes(color=state_factor), stat("identity"))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$priceperlb, group=honeybee$year)) + geom_line(aes(color=state_factor)))
state_factor <- factor(honeybee$state)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$priceperlb, group=honeybee$year)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$year, group=honeybee$priceperlb)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$StateName)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- sqldf("SELECT year, state, MAX(priceperlb) FROM honeybee GROUP BY year;")
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(sort(honeybee$priceperlb,decreasing=TRUE), n = 50)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(sort(honeybee$priceperlb,decreasing=TRUE), n = 10)
library(sqldf)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(sort(honeybee$priceperlb,honeybee$state, decreasing=TRUE), n = 10)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(sort(honeybee$priceperlb, honeybee$state, decreasing=TRUE), n = 10)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(sort(honeybee$priceperlb, decreasing=TRUE), n = 10)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 10)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor))
ggplot(tester, aes(x=tester$year, y=tester$priceperlb, group=tester$state)) +geom_line()
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor)) + facet_wrap()
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor)) + facet_wrap(vars=honeybee$state)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line() + facet_wrap(vars=honeybee$state)
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = var(honeybee$state))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = var(honeybee$state))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
#tester <- head(honeybee[order(honeybee$priceperlb, decreasing=TRUE), ], 50)
#ggplot(honeybee, aes(x=honeybee$year, y=honeybee$priceperlb, group=honeybee$State)) + geom_line(aes(color=state_factor))
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = vars(honeybee$state))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = vars(honeybee$state)) + ggtitle("Price per Pound of Honey By State Per Year")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line()
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = vars(honeybee$state)) + ggtitle("Price per Pound of Honey By State Per Year")+ labs(y="Price Per LB", x = "Year"))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which state the most expensive price per pound of honey per year.
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = vars(honeybee$state)) + ggtitle("Price per Pound of Honey By State Per Year") + labs(y="Price Per LB", x = "Year")
## Load DataSet
honeybee <- read.csv(file="HoneyBees.csv",sep=",",head=TRUE)
## Create a basic plot of Yield per Colony against All Neonics
plot(honeybee$yieldpercol, honeybee$nAllNeonic)
## Create a basic histogram of the number of honey producing colonies
hist(honeybee$numcol)
## Create a plot using ggplot() or qplot() of Yield per Colony against All Neonics
ggplot(honeybee, aes(x=yieldpercol,y=nAllNeonic)) + geom_point(binwidth = 10)
## Load DataSet
honeybee <- read.csv(file="HoneyBees.csv",sep=",",head=TRUE)
## Create a basic plot of Yield per Colony against All Neonics
plot(honeybee$yieldpercol, honeybee$nAllNeonic)
## Create a basic histogram of the number of honey producing colonies
hist(honeybee$numcol)
## Create a plot using ggplot() or qplot() of Yield per Colony against All Neonics
ggplot(honeybee, aes(x=yieldpercol,y=nAllNeonic)) + geom_point(binwidth = 10)
## Create a histogram using ggplot() or qplot() of the number of honey producing colonies
ggplot(honeybee, aes(x=numcol)) + geom_histogram(bins = 30)
## Convert year, state, and Region into Factors
year_factor <- factor(honeybee$year)
state_factor <- factor(honeybee$state)
region_factor <- factor(honeybee$Region)
## Create a histogram using ggplot() of Total production of honey by State
## Ask our idiot professor about this tomorrow ##
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
region_factor <- factor(honeybee$Region)
## Create a histogram using ggplot() of Total production of honey by State
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
## Create a histogram using ggplot() of Total production of honey by State
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which states have the most agressive change in price per pound of honey per year?
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) + geom_line() + facet_wrap(facets = vars(honeybee$state)) + ggtitle("Price per Pound of Honey By State Per Year") + labs(y="Price Per LB", x = "Year")
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which states have the most agressive change in price per pound of honey per year?
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which states have the most agressive change in price per pound of honey per year?
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) +
geom_line() + facet_wrap(facets = vars(honeybee$state)) +
ggtitle("Price per Pound of Honey By State Per Year") +
labs(y="Price Per LB", x = "Year")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
## Create a histogram using ggplot() of Total production of honey by State
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## Create a histogram using ggplot() of Total production of honey by State
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
## Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
## Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
## Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which states have the most agressive change in price per pound of honey per year?
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) +
geom_line() + facet_wrap(facets = vars(honeybee$state)) +
ggtitle("Price per Pound of Honey By State Per Year") +
labs(y="Price Per LB", x = "Year")
## 8. Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
## 7. Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## 9. Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
# Create a basic histogram of the number of honey producing colonies
# Create a plot using ggplot() or qplot() of Yield per Colony against All Neonics
# Create a histogram using ggplot() or qplot() of the number of honey producing colonies
# Convert year, state, and Region into Factors
# Create a histogram using ggplot() of Total production of honey by State
# Create a bar graph using ggplot() of the Number of colonies by Year
# Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
# Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
# Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Set Working Directory
setwd("/Users/gregwalsh/Github/DataScience /DSSA-5101-DATA-EXPLORATION/Project3")
## Place Import Statements Here
library(tidyverse)
library(sqldf)
library(ggplot2)
## Load DataSet
honeybee <- read.csv(file="HoneyBees.csv",sep=",",head=TRUE)
## 1. Create a basic plot of Yield per Colony against All Neonics
plot(honeybee$yieldpercol, honeybee$nAllNeonic)
## 2. Create a basic histogram of the number of honey producing colonies
hist(honeybee$numcol)
## 1. Create a basic plot of Yield per Colony against All Neonics
plot(honeybee$yieldpercol, honeybee$nAllNeonic)
## 2. Create a basic histogram of the number of honey producing colonies
hist(honeybee$numcol)
## 3. Create a plot using ggplot() or qplot() of Yield per Colony against All Neonics
ggplot(honeybee, aes(x=yieldpercol,y=nAllNeonic)) + geom_point(binwidth = 10)
## 4. Create a histogram using ggplot() or qplot() of the number of honey producing colonies
ggplot(honeybee, aes(x=numcol)) + geom_histogram(bins = 30)
## 5. Convert year, state, and Region into Factors
year_factor <- factor(honeybee$year)
state_factor <- factor(honeybee$state)
region_factor <- factor(honeybee$Region)
## 6. Create a histogram using ggplot() of Total production of honey by State
ggplot(honeybee, aes(x=honeybee$state, y=honeybee$totalprod)) + geom_histogram(stat = "identity")
## 7. Create a bar graph using ggplot() of the Number of colonies by Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol)) + geom_bar(stat = "identity")
## 8. Create a bar graph using ggplot() of the Number of colonies per State with indication of number of colonies each Year
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
ggplot(honeybee, aes(x=state_factor, y=honeybee$numcol, fill=year_factor)) + geom_bar(stat = "identity", position = "stack")
## 9. Create a line graph using ggplot() with each line representing a different state and indicating the Number of colonies per Year
ggplot(honeybee, aes(x=honeybee$year, y=honeybee$numcol, group=honeybee$state)) + geom_line(aes(color=state_factor))
## 10. Given the data, present a graph that you find interesting. You can use any graphing functions you want (e.g. plot, qplot, ggplot, plot.ly). It should be easy to recognize what you are presenting (thanks to titles, labels, and whatever else it needs).
## Question: Which states have the most agressive change in price per pound of honey per year?
## Used a facet_wrap to make the visualization a little cleaner
ggplot(honeybee, aes(x=honeybee$year,y=honeybee$priceperlb)) +
geom_line() + facet_wrap(facets = vars(honeybee$state)) +
ggtitle("Price per Pound of Honey By State Per Year") +
labs(y="Price Per LB", x = "Year")
